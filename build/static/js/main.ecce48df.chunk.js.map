{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Person.js","components/Persons.js","services/person.js","components/Notification.js","App.js","index.js"],"names":["Filter","newFilter","handleNewFilter","value","onChange","PersonForm","addPhonebook","newName","newNumber","handleNewName","handleNewNumber","onSubmit","type","Person","person","removePerson","name","number","onClick","Persons","persons","map","baseUrl","axios","get","then","response","data","newObj","post","id","delete","put","Notification","notification","className","message","App","useState","setPersons","setNewName","setNewNumber","setNewFilter","setNotification","useEffect","personService","Allperson","updatePhonebook","updatedPerson","setTimeout","personsFilter","filter","toLowerCase","includes","event","target","preventDefault","some","window","confirm","updatePersonId","find","createdPerson","concat","personDelete","catch","error","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ecce48df.chunk.js","sourcesContent":["\r\nconst Filter = ({newFilter,handleNewFilter}) => (\r\n    <div>\r\n        filter shown with: <input value={newFilter} onChange={handleNewFilter} />\r\n    </div>\r\n)\r\nexport default Filter;","\r\nconst PersonForm = ({addPhonebook,newName,newNumber,handleNewName,handleNewNumber}) => (\r\n    <form onSubmit={addPhonebook}>\r\n        <div>\r\n          name: <input value={newName} onChange={handleNewName} />\r\n        </div>\r\n        <div>\r\n          number: <input value={newNumber} onChange={handleNewNumber} />\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n)\r\nexport default PersonForm;","const Person = ({person, removePerson}) => (\r\n    <p>{person.name} : {person.number} \r\n        <button onClick={() => removePerson(person)}>delete</button>\r\n    </p>\r\n)\r\nexport default Person;","import Person from \"./Person\"\r\nconst Persons = ({ persons, removePerson }) => (\r\n    <div>\r\n        {persons.map(person =>\r\n            <Person key={person.name} person={person} removePerson={removePerson} />\r\n        )}\r\n    </div>\r\n)\r\nexport default Persons;","import axios from \"axios\";\r\n\r\n// const baseUrl = \"http://localhost:3001/api/persons\";\r\nconst baseUrl = \"/api/persons\";\r\nconst getAll = () => axios.get(baseUrl).then(response => response.data)\r\n\r\nconst create = (newObj) => axios.post(baseUrl,newObj).then(response => response.data);\r\n\r\nconst update = (id, newObj) => axios.put(`${baseUrl}/${id}`,newObj).then(response => response.data);\r\n\r\nconst remove = (id) => axios.delete(`${baseUrl}/${id}`);\r\nexport default {getAll, create, remove, update}","const Notification = ({notification}) => {\r\n    if (notification === null) return null;\r\n    return (\r\n        <div className={\"notification \" +notification.type}>{notification.message}</div>\r\n    )\r\n}\r\nexport default Notification;","\nimport React, { useState, useEffect } from 'react'\nimport Filter from \"./components/Filter\";\nimport PersonForm from \"./components/PersonForm\";\nimport Persons from \"./components/Persons\";\nimport personService from \"./services/person\"\nimport Notification from './components/Notification';\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [newFilter, setNewFilter] = useState('')\n  const [notification, setNotification] = useState({message:\"\", type:\"\"})\n  useEffect(() => {\n    personService.getAll()\n      .then(Allperson => {\n        setPersons(Allperson)\n      })\n  },[]);\n\n  const handleNewName = (event) => setNewName(event.target.value);\n  const handleNewNumber = (event) => setNewNumber(event.target.value);\n  const handleNewFilter = (event) => setNewFilter(event.target.value);\n\n  const addPhonebook = (event) => {\n    event.preventDefault();\n    const existName = persons.some(person => person.name === newName); \n    if (existName) {\n      let confirm = window.confirm(`${newName} is already add to phonebook, replace the old number with a new one?`);\n      if (!confirm) return;\n      let updatePersonId = persons.find(person => person.name === newName).id;\n      updatePhonebook(updatePersonId);\n      return;\n    }\n    const newPerson = {\n      name: newName,\n      number: newNumber\n    }\n    personService.create(newPerson)\n          .then(createdPerson => {\n            setPersons(persons.concat(createdPerson));\n            setNewName(\"\");\n            setNewNumber(\"\");\n            setNotification({message:`Added ${newName}` ,  type:\"success\"})\n            setTimeout(() => {\n              setNotification(null)\n            }, 2000);\n          })\n    \n  }\n  const updatePhonebook = (id) => {\n    const changePhonebook = {\n      name: newName,\n      number: newNumber\n    }\n    personService.update(id,changePhonebook).then(updatedPerson => {\n      setPersons(persons.map(person => person.id === id ? updatedPerson : person))\n      setNewName(\"\");\n      setNewNumber(\"\");\n      setNotification({message:`Change ${newName} number` ,  type:\"success\"});\n      setTimeout(() => {\n        setNotification(null)\n      }, 2000);\n    })\n  }\n  const removePerson = (personDelete) => {\n    const confirm = window.confirm(`delete ${personDelete.name} ?`);\n    if (!confirm) return; \n    personService.remove(personDelete.id).then(response => {\n      //console.log(response);\n      setPersons(persons.filter(person => person.id !== personDelete.id));\n      setNotification({message:`delete ${personDelete.name} number` ,  type:\"success\"});\n      setTimeout(() => {\n        setNotification(null)\n      }, 2000);\n    }).catch(error => {\n      setNotification({message:`${error.message}` ,  type:\"error\"})\n      setTimeout(() => {\n        setNotification(null)\n      }, 2000);\n    })\n  }\n  const personsFilter = persons.filter(person => person.name.toLowerCase().includes(newFilter.toLowerCase()))\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification notification={notification} />\n      <Filter newFilter={newFilter} handleNewFilter={handleNewFilter} />\n      <h2>add a new</h2>\n      <PersonForm addPhonebook={addPhonebook} newName={newName} newNumber={newNumber} handleNewName={handleNewName} handleNewNumber={handleNewNumber} />\n      <h2>Numbers</h2>\n      <Persons persons={personsFilter} removePerson={removePerson} />\n\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}